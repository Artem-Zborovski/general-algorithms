#include <iostream>
#include <vector>
#include <fstream>
#include <string>
#include <algorithm>

using namespace std;

int main() {
    ifstream inputFile("input.txt");
    ofstream outputFile("output.txt");

    string s;
    getline(inputFile, s);
    int n = s.size();

    vector<vector<int>> dp(n, vector<int>(n, 0));

    for (int i = 0; i < n; ++i) dp[i][i] = 1;

    for (int length  = 2; length  <= n; ++length ) {
        for (int i = 0; i <= n - length ; ++i) {
            int j = i + length  - 1;
            if (s[i] == s[j]) {
                dp[i][j] = dp[i + 1][j - 1] + 2;
            } else {
                dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]);
            }
        }
    }
    string lPr, rPr;
    int i = 0, j = n - 1;
    while (i <= j) {
        if (s[i] == s[j]) {
            lPr+= s[i];
            if (i != j) rPr = s[j] + rPr;
            ++i; --j;
        } else if (dp[i + 1][j] >= dp[i][j - 1]) {
            ++i;
        } else {
            --j;
        }
    }

    outputFile << dp[0][n - 1] << endl;        
    outputFile << lPr + rPr << endl; 

    inputFile.close();
    outputFile.close();
}
